{"version":3,"sources":["App.tsx","index.tsx"],"names":["sleep","time","Promise","resolve","setTimeout","App","React","processing","setProcessing","initialData","input","setInput","result","setResult","className","href","target","data","options","cells","onChange","matrix","numRows","length","numCols","Array","map","cols","i","col","j","pivot","fields","filter","f","sheetHeight","style","padding","margin","fontSize","disabled","onClick","rowsAsync","makeAsync","sorter","sorters","random","criterion","criteria","greedy","preFilter","row","machine","os","rows","a","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c62da0c.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeAsync, sorters, criteria } from \"covertable\";\nimport {\n  GridSheet,\n  Renderer,\n  Parser,\n  MatrixType,\n  matrix2tsv,\n  aa2oa\n} from \"react-gridsheet\";\nimport \"./App.css\";\n\nconst pivot = (matrix: any[][]): any[][] => {\n  const numRows = matrix.length;\n  const numCols = matrix[0]?.length || 10;\n  const result = [...Array(numCols).map(() => \"\")].map(() => [\n    ...Array(numRows).map(() => \"\")\n  ]);\n  matrix.map((cols, i) => {\n    cols.map((col, j) => {\n      result[j][i] = col;\n    });\n  });\n  return result;\n};\n\nconst sleep = (time: number) => new Promise(resolve => setTimeout(resolve, time));\n\nexport default function App() {\n  const [processing, setProcessing] = React.useState(false);\n  const [initialData] = React.useState<MatrixType>([\n    [\"a\",\t\"b\",\t\"c\",\t\"d\",\t\"e\",\t\"f\",\t\"g\",\t\"h\",\t\"i\",\t\"j\",\t\"k\",\t\"l\",\t\"m\",\t\"n\",\t\"o\",\t\"p\"],\n    [\"a2\"\t,\"b2\"\t,\"c2\"\t,\"d2\"\t,\"e2\"\t,\"f2\"\t,\"g2\"\t,\"h2\"\t,\"i2\"\t,\"j2\"\t,\"k2\"\t,\"l2\"\t,\"m2\"\t,\"n2\"\t,\"o2\"\t,\"p2\"],\n    [\"a3\"\t,\"b3\"\t,\"c3\"\t,\"d3\"\t,\"e3\"\t,\"f3\"\t,\"g3\"\t,\"h3\"\t,\"i3\"\t,\"j3\"\t,\"k3\"\t,\"l3\"\t,\"m3\"\t,\"n3\"\t,\"o3\"\t,\"p3\"],\n    [\"a4\"\t,\"b4\"\t,\"c4\"\t,\"d4\"\t,\"e4\"\t,\"f4\"\t,\"g4\"\t,\"h4\"\t,\"i4\"\t,\"j4\"\t,\"k4\"\t,\"l4\"\t,\"m4\"\t,\"n4\"\t,\"o4\"\t,\"p4\"],\n    [\"a5\"\t,\"b5\"\t,\"c5\"\t,\"d5\"\t,\"e5\"\t,\"f5\"\t,\"g5\"\t,\"h5\"\t,\"i5\"\t,\"j5\"\t,\"k5\"\t,\"l5\"\t,\"m5\"\t,\"n5\"\t,\"o5\"\t,\"p5\"],\n    [\"a6\"\t,\"b6\"\t,\"c6\"\t,\"d6\"\t,\"e6\"\t,\"f6\"\t,\"g6\"\t,\"h6\"\t,\"i6\"\t,\"j6\"\t,\"k6\"\t,\"l6\"\t,\"m6\"\t,\"n6\"\t,\"o6\"\t,\"p6\"],\n    [\"a7\"\t,\"b7\"\t,\"c7\"\t,\"d7\"\t,\"e7\"\t,\"f7\"\t,\"g7\"\t,\"h7\"\t,\"i7\"\t,\"j7\"\t,\"k7\"\t,\"l7\"\t,\"m7\"\t,\"n7\"\t,\"o7\"\t,\"p7\"],\n    [\"a8\"\t,\"b8\"\t,\"c8\"\t,\"d8\"\t,\"e8\"\t,\"f8\"\t,\"g8\"\t,\"h8\"\t,\"i8\"\t,\"j8\"\t,\"k8\"\t,\"l8\"\t,\"m8\"\t,\"n8\"\t,\"o8\"\t,\"p8\"],\n    [\"a9\"\t,\"b9\"\t,\"c9\"\t,\"d9\"\t,\"e9\"\t,\"f9\"\t,\"g9\"\t,\"h9\"\t,\"i9\"\t,\"j9\"\t,\"k9\"\t,\"l9\"\t,\"m9\"\t,\"n9\"\t,\"o9\"\t,\"p9\"],\n    [\"a10\"\t,\"b10\"\t,\"c10\"\t,\"d10\"\t,\"e10\"\t,\"f10\"\t,\"g10\"\t,\"h10\"\t,\"i10\"\t,\"j10\"\t,\"k10\"\t,\"l10\"\t,\"m10\"\t,\"n10\"\t,\"o10\"\t,\"p10\"],\n    [\"a11\"\t,\"b11\"\t,\"c11\"\t,\"d11\"\t,\"e11\"\t,\"f11\"\t,\"g11\"\t,\"h11\"\t,\"i11\"\t,\"j11\"\t,\"k11\"\t,\"l11\"\t,\"m11\"\t,\"n11\"\t,\"o11\"\t,\"p11\"],\n  ])\n  const [input, setInput] = React.useState<any[][]>([]);\n  const [result, setResult] = React.useState<any[][]>([]);\n  return (\n    <div className=\"App\">\n      <h1>Pairwase test with <a href=\"https://github.com/walkframe/covertable\" target=\"_blank\">covertable</a></h1>\n\n      <GridSheet\n        data={initialData}\n        options={{\n          cells: {\n          },\n          onChange: (data) => {\n            if (data != null) {\n              setInput(pivot(data).map((fields) => fields.filter((f) => !!f)));\n            }\n          },\n          sheetHeight: 280,\n        }}\n      />\n\n      <button\n        style={{padding: \"10px 20px\", margin: \"20px 0\", fontSize: 20}}\n        disabled={processing}\n        onClick={() => {\n          const rowsAsync = makeAsync(input, {\n            sorter: sorters.random,\n            criterion: criteria.greedy,\n  \n            preFilter: (row) =>\n              !(\n                (row.machine !== \"iPhone\" && row.os === \"iOS\")\n                // other condition\n              )\n          });\n          setProcessing(true);\n          const rows: MatrixType = [];\n          (async () => {\n            let i = 0;\n            for (let row of rowsAsync) {\n              rows.push(row as any[]);\n              if (i % 10 === 0) {\n                await sleep(50);\n                setResult([...rows]);\n              }\n              i++;\n            }\n            setProcessing(false);\n          })();\n        }}\n      >\n        {processing ? \"Processing...\" : \"Make combinations!\"}\n      </button>\n\n      <GridSheet data={result} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('example4')\n);\n"],"sourceRoot":""}