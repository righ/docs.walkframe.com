{"version":3,"sources":["App.tsx","index.tsx"],"names":["sleep","time","Promise","resolve","setTimeout","App","React","processing","setProcessing","initialData","input","setInput","result","setResult","className","href","target","data","options","cells","onChange","matrix","numRows","length","numCols","Array","map","cols","i","col","j","pivot","fields","filter","f","sheetHeight","style","padding","margin","fontSize","disabled","onClick","rows","rowsAsync","makeAsync","sorter","sorters","random","criterion","criteria","greedy","preFilter","row","next","a","done","push","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAsBMA,EAAQ,SAACC,GAAD,OACZ,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAEhC,SAASI,IAAO,IAAD,EACQC,YAAe,GADvB,mBACrBC,EADqB,KACTC,EADS,OAENF,WAA2B,CAC/C,CACE,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEF,CACE,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SArMGG,EAFqB,sBA0MFH,WAAwB,IA1MtB,mBA0MrBI,EA1MqB,KA0MdC,EA1Mc,OA2MAL,WAAwB,IA3MxB,mBA2MrBM,EA3MqB,KA2MbC,EA3Ma,KA4M5B,OACE,sBAAKC,UAAU,MAAf,UACE,oDACqB,IACnB,mBAAGC,KAAK,0CAA0CC,OAAO,SAAzD,2BAKF,cAAC,IAAD,CACEC,KAAMR,EACNS,QAAS,CACPC,MAAO,GACPC,SAAU,SAACH,GACG,MAARA,GACFN,EA5OA,SAACU,GAA8B,IAAD,EACpCC,EAAUD,EAAOE,OACjBC,GAAU,UAAAH,EAAO,UAAP,eAAWE,SAAU,GAC/BX,EAAS,YAAIa,MAAMD,GAASE,KAAI,iBAAM,OAAKA,KAAI,8BAChDD,MAAMH,GAASI,KAAI,iBAAM,UAO9B,OALAL,EAAOK,KAAI,SAACC,EAAMC,GAChBD,EAAKD,KAAI,SAACG,EAAKC,GACblB,EAAOkB,GAAGF,GAAKC,QAGZjB,EAiOcmB,CAAMd,GAAMS,KAAI,SAACM,GAAD,OAAYA,EAAOC,QAAO,SAACC,GAAD,QAASA,UAGhEC,YAAa,OAIjB,wBACEC,MAAO,CAAEC,QAAS,YAAaC,OAAQ,SAAUC,SAAU,IAC3DC,SAAUjC,EACVkC,QAAS,WACPjC,GAAc,GACd,IAAMkC,EAAmB,GACnBC,EAAYC,oBAAUlC,EAAO,CACjCmC,OAAQC,UAAQC,OAChBC,UAAWC,WAASC,OAEpBC,UAAW,SAACC,GAAD,QAEK,MAAXA,EAAI,IAAyB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,OAI7DxC,EAAS+B,EAAUU,OACvB,sBAAC,4BAAAC,EAAA,sDACU1B,EAAI,EADd,UACkBhB,EAAO2C,KADzB,oBAEGb,EAAKc,KAAK5C,EAAO6C,OACjB7C,EAAS+B,EAAUU,OACfzB,EAAI,IAAM,EAJjB,uBAKKf,EAAU,GAAD,OAAK6B,IALnB,SAMW1C,EAAM,IANjB,OAC+B4B,IAD/B,uBASCpB,GAAc,GATf,2CAAD,IAjBJ,SA8BGD,EAAa,gBAAkB,uBAGlC,cAAC,IAAD,CAAWU,KAAML,OCvRvB8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,e","file":"static/js/main.05bb6e52.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeAsync, sorters, criteria } from \"covertable\";\nimport {\n  GridSheet,\n  MatrixType,\n} from \"react-gridsheet\";\nimport \"./App.css\";\n\nconst pivot = (matrix: any[][]): any[][] => {\n  const numRows = matrix.length;\n  const numCols = matrix[0]?.length || 10;\n  const result = [...Array(numCols).map(() => \"\")].map(() => [\n    ...Array(numRows).map(() => \"\")\n  ]);\n  matrix.map((cols, i) => {\n    cols.map((col, j) => {\n      result[j][i] = col;\n    });\n  });\n  return result;\n};\n\nconst sleep = (time: number) =>\n  new Promise((resolve) => setTimeout(resolve, time));\n\nexport default function App() {\n  const [processing, setProcessing] = React.useState(false);\n  const [initialData] = React.useState<MatrixType>([\n    [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\"\n    ],\n    [\n      \"a2\",\n      \"b2\",\n      \"c2\",\n      \"d2\",\n      \"e2\",\n      \"f2\",\n      \"g2\",\n      \"h2\",\n      \"i2\",\n      \"j2\",\n      \"k2\",\n      \"l2\",\n      \"m2\",\n      \"n2\",\n      \"o2\",\n      \"p2\"\n    ],\n    [\n      \"a3\",\n      \"b3\",\n      \"c3\",\n      \"d3\",\n      \"e3\",\n      \"f3\",\n      \"g3\",\n      \"h3\",\n      \"i3\",\n      \"j3\",\n      \"k3\",\n      \"l3\",\n      \"m3\",\n      \"n3\",\n      \"o3\",\n      \"p3\"\n    ],\n    [\n      \"a4\",\n      \"b4\",\n      \"c4\",\n      \"d4\",\n      \"e4\",\n      \"f4\",\n      \"g4\",\n      \"h4\",\n      \"i4\",\n      \"j4\",\n      \"k4\",\n      \"l4\",\n      \"m4\",\n      \"n4\",\n      \"o4\",\n      \"p4\"\n    ],\n    [\n      \"a5\",\n      \"b5\",\n      \"c5\",\n      \"d5\",\n      \"e5\",\n      \"f5\",\n      \"g5\",\n      \"h5\",\n      \"i5\",\n      \"j5\",\n      \"k5\",\n      \"l5\",\n      \"m5\",\n      \"n5\",\n      \"o5\",\n      \"p5\"\n    ],\n    [\n      \"a6\",\n      \"b6\",\n      \"c6\",\n      \"d6\",\n      \"e6\",\n      \"f6\",\n      \"g6\",\n      \"h6\",\n      \"i6\",\n      \"j6\",\n      \"k6\",\n      \"l6\",\n      \"m6\",\n      \"n6\",\n      \"o6\",\n      \"p6\"\n    ],\n    [\n      \"a7\",\n      \"b7\",\n      \"c7\",\n      \"d7\",\n      \"e7\",\n      \"f7\",\n      \"g7\",\n      \"h7\",\n      \"i7\",\n      \"j7\",\n      \"k7\",\n      \"l7\",\n      \"m7\",\n      \"n7\",\n      \"o7\",\n      \"p7\"\n    ],\n    [\n      \"a8\",\n      \"b8\",\n      \"c8\",\n      \"d8\",\n      \"e8\",\n      \"f8\",\n      \"g8\",\n      \"h8\",\n      \"i8\",\n      \"j8\",\n      \"k8\",\n      \"l8\",\n      \"m8\",\n      \"n8\",\n      \"o8\",\n      \"p8\"\n    ],\n    [\n      \"a9\",\n      \"b9\",\n      \"c9\",\n      \"d9\",\n      \"e9\",\n      \"f9\",\n      \"g9\",\n      \"h9\",\n      \"i9\",\n      \"j9\",\n      \"k9\",\n      \"l9\",\n      \"m9\",\n      \"n9\",\n      \"o9\",\n      \"p9\"\n    ],\n    [\n      \"a10\",\n      \"b10\",\n      \"c10\",\n      \"d10\",\n      \"e10\",\n      \"f10\",\n      \"g10\",\n      \"h10\",\n      \"i10\",\n      \"j10\",\n      \"k10\",\n      \"l10\",\n      \"m10\",\n      \"n10\",\n      \"o10\",\n      \"p10\"\n    ],\n    [\n      \"a11\",\n      \"b11\",\n      \"c11\",\n      \"d11\",\n      \"e11\",\n      \"f11\",\n      \"g11\",\n      \"h11\",\n      \"i11\",\n      \"j11\",\n      \"k11\",\n      \"l11\",\n      \"m11\",\n      \"n11\",\n      \"o11\",\n      \"p11\"\n    ]\n  ]);\n  const [input, setInput] = React.useState<any[][]>([]);\n  const [result, setResult] = React.useState<any[][]>([]);\n  return (\n    <div className=\"App\">\n      <h1>\n        Pairwase test with{\" \"}\n        <a href=\"https://github.com/walkframe/covertable\" target=\"_blank\">\n          covertable\n        </a>\n      </h1>\n\n      <GridSheet\n        data={initialData}\n        options={{\n          cells: {},\n          onChange: (data) => {\n            if (data != null) {\n              setInput(pivot(data).map((fields) => fields.filter((f) => !!f)));\n            }\n          },\n          sheetHeight: 280\n        }}\n      />\n\n      <button\n        style={{ padding: \"10px 20px\", margin: \"20px 0\", fontSize: 20 }}\n        disabled={processing}\n        onClick={() => {\n          setProcessing(true);\n          const rows: MatrixType = [];\n          const rowsAsync = makeAsync(input, {\n            sorter: sorters.random,\n            criterion: criteria.greedy,\n\n            preFilter: (row) =>\n              !(\n                (row[0] !== \"a\" && row[1] === \"b\" && row[2] === \"c\" && row[3] === \"d\")\n                // other condition\n              )\n          });\n          let result = rowsAsync.next();\n          (async () => {\n            for (let i = 0; !result.done; i++) {\n              rows.push(result.value as any[]);\n              result = rowsAsync.next();\n              if (i % 5 === 0) {\n                setResult([...rows]);\n                await sleep(0.1);\n              }\n            }\n            setProcessing(false);\n          })();\n        }}\n      >\n        {processing ? \"Processing...\" : \"Make combinations!\"}\n      </button>\n\n      <GridSheet data={result} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('example4')\n);\n"],"sourceRoot":""}