{"version":3,"sources":["App.tsx","index.tsx"],"names":["initialData","g","g16","toString","row","b","b16","push","length","App","wrapperRef","React","document","createElement","height","setHeight","width","setWidth","data","className","ref","onMouseEnter","e","currentTarget","clientHeight","clientWidth","style","resize","overflow","border","options","sheetHeight","current","sheetWidth","cells","default","color","renderer","renderers","coloring","ColoringRenderer","margin","fontSize","value","backgroundColor","Renderer","ReactDOM","render","StrictMode","getElementById"],"mappings":"4LASA,I,yGADMA,EAA0B,GACvBC,EAAI,IAAKA,GAAK,EAAGA,IAAK,CAG7B,IAFA,IAAMC,EAAMD,EAAEE,SAAS,IACjBC,EAAgB,GACbC,EAAI,IAAKA,GAAK,EAAGA,IAAK,CAC7B,IAAMC,EAAMD,EAAEF,SAAS,IACvBC,EAAIG,KAAJ,aAA8B,IAAfL,EAAIM,OAAe,IAAMN,EAAMA,GAA9C,OAAoE,IAAfI,EAAIE,OAAe,IAAMF,EAAMA,IAEtFN,EAAYO,KAAKH,GAMJ,SAASK,IACtB,IAAMC,EAAaC,SACjBC,SAASC,cAAc,QAFG,EAIAF,WAPR,KAGQ,mBAIrBG,EAJqB,KAIbC,EAJa,OAKFJ,WAPP,KAES,mBAKrBK,EALqB,KAKdC,EALc,OAMbN,WAAeX,GAAvBkB,EANqB,oBAQ5B,OACE,sBAAKC,UAAU,MAAf,UACE,sEACA,qBACEC,IAAKV,EACLW,aAAc,SAACC,GACbP,EAAUO,EAAEC,cAAcC,cAC1BP,EAASK,EAAEC,cAAcE,cAE3BC,MAAO,CACLV,QACAF,SACAa,OAAQ,OACRC,SAAU,SACVC,OAAQ,qBAXZ,SAaE,cAAC,IAAD,CACEX,KAAMA,EACNY,QAAS,CACPC,YAAarB,EAAWsB,QAAQR,cA9BtB,IA+BVS,WAAYvB,EAAWsB,QAAQP,aA9BtB,IA+BTS,MAAO,CACLC,QAAS,CACPT,MAAO,CAACU,MAAO,WACfC,SAAU,aAGdC,UAAW,CACTC,SAAU,IAAIC,QAMtB,qBAAKd,MAAO,CAACe,OAAQ,GAAIC,SAAU,IAAnC,iD,IAQAF,E,4JACJ,SAAOG,GACL,OACE,qBACEjB,MAAO,CACLV,MAAO,OACPF,OAAQ,OACR8B,gBAAiBD,GAJrB,SAMEA,Q,GATuBE,KCnE/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,e","file":"static/js/main.fdc84d54.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  GridSheet,\n  Renderer,\n  MatrixType,\n} from \"react-gridsheet\";\nimport \"./App.css\";\n\nconst initialData: MatrixType = [];\nfor (let g = 255; g >= 0; g--) {\n  const g16 = g.toString(16);\n  const row: string[] = [];\n  for (let b = 255; b >= 0; b--) {\n    const b16 = b.toString(16);\n    row.push(`#00${g16.length === 1 ? \"0\" + g16 : g16 }${b16.length === 1 ? \"0\" + b16 : b16}`);\n  }\n  initialData.push(row);\n};\n\nconst initialHeight = 200;\nconst initialWidth = 300;\n\nexport default function App() {\n  const wrapperRef = React.useRef<HTMLDivElement>(\n    document.createElement(\"div\")\n  );\n  const [height, setHeight] = React.useState(initialHeight);\n  const [width, setWidth] = React.useState(initialWidth);\n  const [data] = React.useState(initialData);\n\n  return (\n    <div className=\"App\">\n      <h1>Color code table (#00ffff ~ #000000)</h1>\n      <div\n        ref={wrapperRef} \n        onMouseEnter={(e) => {\n          setHeight(e.currentTarget.clientHeight);\n          setWidth(e.currentTarget.clientWidth);\n        }}\n        style={{\n          width,\n          height,\n          resize: \"both\",\n          overflow: \"hidden\",\n          border: \"solid 1px #000000\",\n        }}>\n        <GridSheet\n          data={data}\n          options={{\n            sheetHeight: wrapperRef.current.clientHeight || initialHeight,\n            sheetWidth: wrapperRef.current.clientWidth || initialWidth,\n            cells: {\n              default: {\n                style: {color: \"#ffffff\"},\n                renderer: \"coloring\",\n              }\n            },\n            renderers: {\n              coloring: new ColoringRenderer(),\n            }\n          }}\n        />\n      </div>\n      \n      <div style={{margin: 20, fontSize: 30}}>\n        Drag right-bottom of this table.\n      </div>\n      \n    </div>\n  );\n};\n\nclass ColoringRenderer extends Renderer {\n  string(value: string) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: value,\n        }}\n      >{value}</div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('example5')\n);\n"],"sourceRoot":""}