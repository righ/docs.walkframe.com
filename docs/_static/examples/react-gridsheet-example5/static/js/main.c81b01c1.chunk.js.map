{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","className","style","tableLayout","width","borderCollapse","data","Array","from","length","i","c","j","t","maxWidth","options","cells","default","color","fontSize","renderer","renderers","coloring","ColoringRenderer","sheetResize","r","g","toString","padStart","b","value","height","backgroundColor","Renderer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RASe,SAASA,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,iEACA,uBAAOC,MAAO,CAACC,YAAa,QAASC,MAAO,OAAQC,eAAgB,YAApE,SACE,kCACE,+BACE,+BACE,8CACA,cAAC,IAAD,CACEC,KAAMC,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACC,EAAGC,GAAJ,OAAUJ,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACG,EAAGC,GAAJ,qBAAkBF,EAAlB,YAAuBA,EAAvB,YAA4BA,EAA5B,aAAkC,IAAIE,GAAK,IAA3C,WACpEX,MAAO,CAAEY,SAAU,QACnBC,QAAS,CACPC,MAAO,CACLC,QAAS,CACPf,MAAO,CAACgB,MAAO,UAAWC,SAAU,GACpCC,SAAU,aAGdC,UAAW,CACTC,SAAU,IAAIC,GAEhBC,YAAa,aAInB,+BACE,kDACA,cAAC,IAAD,CACElB,KAAMC,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACC,EAAGe,GAAJ,OAAUlB,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACG,EAAGc,GAAJ,kBAAe,IAAID,GAAGE,SAAS,IAAIC,SAAS,EAAG,MAA/C,QAAuD,IAAIF,GAAGC,SAAS,IAAIC,SAAS,EAAG,KAAvF,YACpE1B,MAAO,CAAEY,SAAU,QACnBC,QAAS,CACPC,MAAO,CACLC,QAAS,CACPf,MAAO,CAACgB,MAAO,WACfE,SAAU,aAGdC,UAAW,CACTC,SAAU,IAAIC,GAEhBC,YAAa,oBAKrB,+BACE,+BACE,oDACA,cAAC,IAAD,CACElB,KAAMC,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACC,EAAGe,GAAJ,OAAUlB,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACG,EAAGiB,GAAJ,kBAAe,IAAIJ,GAAGE,SAAS,IAAIC,SAAS,EAAG,KAA/C,cAAyD,IAAIC,GAAGF,SAAS,IAAIC,SAAS,EAAG,YAC7J1B,MAAO,CAAEY,SAAU,QACnBC,QAAS,CACPC,MAAO,CACLC,QAAS,CACPf,MAAO,CAACgB,MAAO,WACfE,SAAU,aAGdC,UAAW,CACTC,SAAU,IAAIC,GAEhBC,YAAa,mBAInB,+BACE,8CACA,cAAC,IAAD,CACElB,KAAMC,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACC,EAAGgB,GAAJ,OAAUnB,MAAMC,KAAK,CAACC,OAAQ,MAAM,SAACG,EAAGiB,GAAJ,oBAAiB,IAAIH,GAAGC,SAAS,IAAIC,SAAS,EAAG,MAAjD,QAAyD,IAAIC,GAAGF,SAAS,IAAIC,SAAS,EAAG,YAC7J1B,MAAO,CAAEY,SAAU,QACnBC,QAAS,CACPC,MAAO,CACLC,QAAS,CACPf,MAAO,CAACgB,MAAO,WACfE,SAAU,aAGdC,UAAW,CACTC,SAAU,IAAIC,GAEhBC,YAAa,wB,IAWzBD,E,4JACJ,SAAOO,GACL,OACE,qBACE5B,MAAO,CACLE,MAAO,OACP2B,OAAQ,OACRC,gBAAiBF,GAJrB,SAMEA,Q,GATuBG,KChG/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,e","file":"static/js/main.c81b01c1.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  GridSheet,\n  Renderer,\n} from \"react-gridsheet\";\nimport \"./App.css\";\n\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Drag right bottom of the sheets</h1>\n      <table style={{tableLayout: \"fixed\", width: \"100%\", borderCollapse: \"collapse\"}}>\n        <tbody>\n          <tr>\n            <td>\n              <h2>Resize: both</h2>\n              <GridSheet\n                data={Array.from({length: 256}, (i, c) => Array.from({length: 100}, (j, t) => `rgba(${c},${c},${c},${(100-t) / 100})`))}\n                style={{ maxWidth: \"100%\" }}\n                options={{\n                  cells: {\n                    default: {\n                      style: {color: \"#ffffff\", fontSize: 9},\n                      renderer: \"coloring\",\n                    }\n                  },\n                  renderers: {\n                    coloring: new ColoringRenderer(),\n                  },\n                  sheetResize: \"both\",\n                }}\n              />\n            </td>\n            <td>\n              <h2>Resize: vertical</h2>\n              <GridSheet\n                data={Array.from({length: 256}, (i, r) => Array.from({length: 256}, (j, g) => `#${(255-r).toString(16).padStart(2, \"0\")}${(255-g).toString(16).padStart(2, \"0\")}00`))}\n                style={{ maxWidth: \"100%\"}}\n                options={{\n                  cells: {\n                    default: {\n                      style: {color: \"#ffffff\"},\n                      renderer: \"coloring\",\n                    }\n                  },\n                  renderers: {\n                    coloring: new ColoringRenderer(),\n                  },\n                  sheetResize: \"vertical\",\n                }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h2>Resize: horizontal</h2>\n              <GridSheet\n                data={Array.from({length: 256}, (i, r) => Array.from({length: 256}, (j, b) => `#${(255-r).toString(16).padStart(2, \"0\")}00${(255-b).toString(16).padStart(2, \"0\")}`))}\n                style={{ maxWidth: \"100%\"}}\n                options={{\n                  cells: {\n                    default: {\n                      style: {color: \"#ffffff\"},\n                      renderer: \"coloring\",\n                    }\n                  },\n                  renderers: {\n                    coloring: new ColoringRenderer(),\n                  },\n                  sheetResize: \"horizontal\",\n                }}\n              />\n            </td>\n            <td>\n              <h2>Resize: none</h2>\n              <GridSheet\n                data={Array.from({length: 256}, (i, g) => Array.from({length: 256}, (j, b) => `#00${(255-g).toString(16).padStart(2, \"0\")}${(255-b).toString(16).padStart(2, \"0\")}`))}\n                style={{ maxWidth: \"100%\"}}\n                options={{\n                  cells: {\n                    default: {\n                      style: {color: \"#ffffff\"},\n                      renderer: \"coloring\",\n                    }\n                  },\n                  renderers: {\n                    coloring: new ColoringRenderer(),\n                  },\n                  sheetResize: \"none\",\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nclass ColoringRenderer extends Renderer {\n  string(value: string) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: value,\n        }}\n      >{value}</div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('example5')\n);\n"],"sourceRoot":""}